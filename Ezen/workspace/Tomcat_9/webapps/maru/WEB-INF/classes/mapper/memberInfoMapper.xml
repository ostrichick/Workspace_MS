<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ezen.maru.pjt.memberInfo">

  <!-- 회원 가입 -->
  <insert id="signup" parameterType="memberInfoVo">
    INSERT INTO MEMBER_INFO(
    member_id, member_pw, member_name, member_email, member_phone, member_addr,
    member_addr2, member_postcode
    )VALUES(
    #{member_id}, #{member_pw}, #{member_name}, #{member_email}, #{member_phone}, #{member_addr},
    #{member_addr2}, #{member_postcode})
  </insert>

  <select id="getCryptedMemberPw" parameterType="memberInfoVo" resultType="memberInfoVo">
    select * from member_info where member_id = #{member_id} and deleted_yn = 'N'
  </select>

  <!-- 로그인 -->
  <select id="signin" parameterType="memberInfoVo" resultType="memberInfoVo">
    select * from member_info
    where member_id = #{member_id}
    and member_pw = #{member_pw}
    and deleted_yn = 'N'
  </select>

  <!-- 회원정보 수정 페이지 출력 -->
  <select id="getMember" parameterType="string" resultType="memberInfoVo">
    select * from member_info where member_id = #{member_id}
  </select>

  <!-- 회원정보 수정 실행 -->
  <update id="updateMember" parameterType="memberInfoVo">
    UPDATE MEMBER_INFO
    SET
    member_pw = #{member_pw},
    member_email = #{member_email},
    member_phone = #{member_phone},
    member_addr = #{member_addr},
    member_addr2 = #{member_addr2},
    member_postcode = #{member_postcode}
    WHERE
    member_idx = #{member_idx}
  </update>

  <!-- 회원 비활성화 -->
  <update id="deactiveMember" parameterType="memberInfoVo">
    UPDATE MEMBER_INFO
    SET
    deleted_yn = 'Y'
    WHERE
    member_idx = #{member_idx}
  </update>

  <select id="getMemberList" resultType="memberInfoVo">
    select * from member_info
    order by member_admin, deleted_yn
  </select>

  <!-- 아이디 중복 체크 -->
  <select id="idDuplicateCheck" resultType="int">
    select count(*) from member_info
    where member_id = #{member_id}
  </select>

  <!-- 아이디 찾기 -->
  <select id="findIdByEmail" parameterType="String" resultType="String">
    select member_id from member_info where member_email = #{member_email}
  </select>
  <select id="findIdByPhone" parameterType="String" resultType="String">
    select member_id from member_info where member_phone = #{member_phone}
  </select>

  <!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- --><!-- -->

  <update id="updateGrade" parameterType="map">
    update member_tbl set member_grade = #{member_grade}
    where member_idx = #{member_idx}
  </update>

  <delete id="deleteMember" parameterType="list">
    delete from member_tbl where member_idx in
    <foreach collection="list" item="member_idx" open="(" separator="," close=")">
      #{member_idx}
    </foreach>
  </delete>



</mapper>	